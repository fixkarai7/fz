XML

STEP 1: CREATE A TABLE WITH XML COLUMN
CREATE TABLE EMPLOYEE_XML(
    ID NUMBER PRIMARY KEY,
    EMP_DATA XMLTYPE
);
 

STEP 2: INSERT XML RECORD
INSERT INTO EMPLOYEE_XML VALUES(
    101,
    XMLTYPE('<EMPLOYEE>
                <NAME>KHAN AYESHA</NAME>
                <DEPARTMENT>IT</DEPARTMENT>
                <SALARY>40000</SALARY>    
            </EMPLOYEE>')
)
INSERT INTO EMPLOYEE_XML VALUES(
    102,
    XMLTYPE('<EMPLOYEE>
                <NAME>SAYYED MARIYA</NAME>
                <DEPARTMENT>CS</DEPARTMENT>
                <SALARY>45000</SALARY>    
            </EMPLOYEE>')
)
INSERT INTO EMPLOYEE_XML VALUES(
    103,
    XMLTYPE('<EMPLOYEE>
                <NAME>SHAIKH ZEHWA</NAME>
                <DEPARTMENT>CS</DEPARTMENT>
                <SALARY>50000</SALARY>    
            </EMPLOYEE>')
)
INSERT INTO EMPLOYEE_XML VALUES(
    104,
    XMLTYPE('<EMPLOYEE>
                <NAME>SAYYED MIRHA</NAME>
                <DEPARTMENT>IT</DEPARTMENT>
                <SALARY>55000</SALARY>    
            </EMPLOYEE>')
)
INSERT INTO EMPLOYEE_XML VALUES(
    105,
    XMLTYPE('<EMPLOYEE>
                <NAME>KHAN ZUBIA</NAME>
                <DEPARTMENT>BMS</DEPARTMENT>
                <SALARY>65000</SALARY>    
            </EMPLOYEE>')
)
     
STEP 3: QUERY XML DATA

EX: GET ALL EMPLOYEE NAMES
SELECT
    EXTRACTVALUE(EMP_DATA, '/EMPLOYEE/NAME') AS EMPLOYEE_NAME
FROM
    EMPLOYEE_XML;

 

EX: GET EMPLOYEES WITH SALARY>50000
SELECT
    EXTRACTVALUE(EMP_DATA, '/EMPLOYEE/NAME')   AS NAME,
    EXTRACTVALUE(EMP_DATA, '/EMPLOYEE/SALARY') AS SALARY
FROM
    EMPLOYEE_XML
WHERE EXTRACTVALUE(EMP_DATA,'/EMPLOYEE/SALARY')>50000;

 

STEP 4: UPDATE XML DATA
UPDATE EMPLOYEE_XML
SET EMP_DATA =XMLTYPE(
            '<EMPLOYEE>
                <NAME>KHAN AYESHA</NAME>
                <DEPARTMENT>CS</DEPARTMENT>
                <SALARY>52000</SALARY>    
            </EMPLOYEE>')
WHERE ID = 101;
 

STEP 5: DELETE XML DATA

DELETE FROM EMPLOYEE_XML WHERE ID =104;
 

STEP 6 ; XML TABLE
SELECT E.ID,
       X.NAME,
       X.DEPARTMENT,
       X.SALARY
FROM EMPLOYEE_XML E,
    XMLTABLE(
        '/EMPLOYEE'
        PASSING E.EMP_DATA
        COLUMNS
        NAME            VARCHAR(50)     PATH 'NAME',
        DEPARTMENT      VARCHAR(30)     PATH'DEPARTMENT',
        SALARY          NUMBER          PATH'SALARY'
    )X

 













EXCERSICE:
	TITLE      
	AUTHOR 
	GENRE
	PRICE
	YEAR
THE XML DATA WILL BE STORED INSIDE TABLE LIBRARY_XML USING XMLTYPE.
TASKS:
Q1: CREATE A TABLE LIBRARY_XML WITH:
	ID(PRIMARY KEY)
	BOOK_DATA(XMLTYPE)
CREATE TABLE LIBRARY_XML(
    ID NUMBER PRIMARY KEY,
    BOOK_DATA XMLTYPE
);
 

Q 2: INSERT AT LEAST 4  BOOKS INTO TABLE.
INSERT INTO LIBRARY_XML VALUES(
    101,
    XMLTYPE('<BOOK>
                <TITLE>THE ALCHEMIST</TITLE>
                <AUTHOR>PAULO COELHO</AUTHOR>
                <GENRE>FICTION</GENRE>    
                <PRICE>300</PRICE>
                <YEAR>1988</YEAR>
            </BOOK>')
)
INSERT INTO LIBRARY_XML VALUES(
    102,
    XMLTYPE('<BOOK>
                <TITLE>CLEAN CODE</TITLE>
                <AUTHOR>ROBERT C.MARTIN</AUTHOR>
                <GENRE>PROGRAMMING</GENRE>    
                <PRICE>550</PRICE>
                <YEAR>2008</YEAR>
            </BOOK>')
)
INSERT INTO LIBRARY_XML VALUES(
    103,
    XMLTYPE('<BOOK>
                <TITLE>RICH DAD POOR DAD</TITLE>
                <AUTHOR>ROBERT KIYOSAKI</AUTHOR>
                <GENRE>FINANACE</GENRE>    
                <PRICE>400</PRICE>
                <YEAR>1997</YEAR>
            </BOOK>')
)
INSERT INTO LIBRARY_XML VALUES(
    104,
    XMLTYPE('<BOOK>
                <TITLE>ATOMIC HABITS</TITLE>
                <AUTHOR>JAMES CLEAR</AUTHOR>
                <GENRE>SELF-HELP</GENRE>    
                <PRICE>500</PRICE>
                <YEAR>2018</YEAR>
            </BOOK>')
)
                

Q3:  WRITE A QUERY TO DISPLAY ALL BOOKS WITH TITLE , AUTHOR, GENRE, PRICE, YEAR USING XML TABLE.
SELECT X.TITLE,
       X.AUTHOR,
       X.GENRE,
       X.PRICE,
       X.YEAR
FROM LIBRARY_XML B,
    XMLTABLE(
        '/BOOK'
        PASSING B.BOOK_DATA
        COLUMNS
        TITLE            VARCHAR(100)     PATH 'TITLE',
        AUTHOR           VARCHAR(100)     PATH'AUTHOR',
        GENRE            VARCHAR(50)      PATH'GENRE',
        PRICE            NUMBER           PATH'PRICE',
        YEAR             NUMBER           PATH'YEAR'
    )X

 

 Q4: RETRIEVE ONLY THOSE BOOKS WHER PRICE > 400
SELECT X.TITLE,
       X.AUTHOR,
       X.GENRE,
       X.PRICE,
       X.YEAR
FROM LIBRARY_XML B,
    XMLTABLE(
        '/BOOK'
        PASSING B.BOOK_DATA
        COLUMNS
        TITLE            VARCHAR(100)     PATH 'TITLE',
        AUTHOR           VARCHAR(100)     PATH'AUTHOR',
        GENRE            VARCHAR(50)      PATH'GENRE',
        PRICE            NUMBER           PATH'PRICE',
        YEAR             NUMBER           PATH'YEAR'
    )X
WHERE X.PRICE >400;
 

Q5: UPDATE THE PRICE OF “ THE ALCHEMIST” TO 350.
UPDATE LIBRARY_XML
SET BOOK_DATA =XMLTYPE(
            '<BOOK>
                <TITLE>THE ALCHEMIST</TITLE>
                <AUTHOR>PAULO COELHO</AUTHOR>
                <GENRE>FICTION</GENRE>    
                <PRICE>350</PRICE>
                <YEAR>1988</YEAR>
            </BOOK>')
WHERE ID = 101;
 

Q6: DELETE THE RECORD OF THE BOOK “RICH DAD POOR DAD”.
DELETE FROM LIBRARY_XML WHERE ID =103;
 

Q7:  USE XMLTABLE WITH WHERE CONDITION TO FETCH ALL PROGRAMMING BOOKS.
SELECT X.TITLE,
       X.AUTHOR,
       X.GENRE,
       X.PRICE,
       X.YEAR
FROM LIBRARY_XML B,
    XMLTABLE(
        '/BOOK'
        PASSING B.BOOK_DATA
        COLUMNS
        TITLE            VARCHAR(100)     PATH 'TITLE',
        AUTHOR           VARCHAR(100)     PATH'AUTHOR',
        GENRE            VARCHAR(50)      PATH'GENRE',
        PRICE            NUMBER           PATH'PRICE',
        YEAR             NUMBER           PATH'YEAR'
    )X
WHERE X.GENRE = 'PROGRAMMING';


 


